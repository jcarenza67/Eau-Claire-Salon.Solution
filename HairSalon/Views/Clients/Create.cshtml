@{
    Layout = "_Layout";
}

@model HairSalon.Models.Client

<h1 class="add-new">Add a new client</h1>

<p class="note"><strong>NOTE:</strong> You need to have at least one Stylist before you can add a Client!</p>
<p>Go to @Html.ActionLink("this page", "Create", "Stylists") to create a stylist.</p>

@using (Html.BeginForm())
{
    <div class="mb-3">
        @Html.LabelFor(model => model.Name, new { @class = "form-label" })
        @Html.TextBoxFor(model => model.Name, new { @class = "form-control", required = "required" })
    </div>

    <div class="mb-3">
        @Html.LabelFor(model => model.Description, new { @class = "form-label" })
        @Html.TextBoxFor(model => model.Description, new { @class = "form-control", required = "required" })
    </div>

    <div class="mb-3">
        @Html.LabelFor(model => model.Email, new { @class = "form-label" })
        @Html.TextBoxFor(model => model.Email, new { @class = "form-control", required = "required" })
    </div>

    <div class="mb-3">
        @Html.LabelFor(model => model.Phone, new { @class = "form-label" })
        @Html.TextBoxFor(model => model.Phone, new { @class = "form-control", required = "required" })
    </div>

    <div class="mb-3">
        @Html.LabelFor(model => model.Stylist, new { @class = "form-label" })
        @Html.DropDownListFor(model => model.StylistId, (SelectList)ViewBag.StylistId, "Select a stylist", new { @class = "form-select" })
        @Html.ValidationMessageFor(model => model.StylistId, "", new { @class = "invalid-feedback" })
    </div>

    <button type="submit" class="btn btn-primary">Add new client</button>
}
<br />
<p>@Html.ActionLink("Show All Clients", "Index", "Clients", null, new { @class = "btn btn-primary" })</p>
